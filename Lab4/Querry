Part B:- 
1.select match_id,t2.team_name as Team1,t3.team_name as Team2,venue_name as stadium_name,city_name,t1.team_name as winning_team,win_type,win_margin,season_year from match 
join venue on venue.venue_id=match.venue_id
join team as t1 on match.match_winner=t1.team_id 
join team as t2 on match.team1=t2.team_id 
join team as t3 on match.team2=t3.team_id 
order by season_year desc

2.
Innings-1, batting:-
select match_id,player.player_name,out1.Runs,out1.fours,out1.sixes,out1.Balls_faced from
(select match_id,striker,sum(runs_scored) as Runs,count( case runs_scored when 4 then 1 else null end)as fours,count( case runs_scored when 6 then 1 else null end)as sixes,count(runs_scored) as Balls_faced
from ball_by_ball 
where innings_no=1
group by match_id,striker) as out1
join player on player.player_id=out1.striker

Innings-1, extras and total(runs and wickets):-
select match_id,sum(extra_runs)as extra_runs, sum(runs_scored+extra_runs) as tot_runs,sum(case when out_type != 'NULL' then 1 else 0 end) as tot_wickets
from ball_by_ball 
where innings_no=1 
group by match_id
order by match_id 


Innings-1, baller
select match_id,player.player_name,out1.balls_bowled,out1.runs_given,out1.wickets_taken from
(select match_id,bowler,count(bowler) as balls_bowled, sum(runs_scored) as runs_given,sum(case when out_type != 'NULL' then 1 else 0 end) as wickets_taken
from ball_by_ball 
where innings_no=1 
group by match_id,bowler) as out1
join player on player.player_id=out1.bowler
order by match_id

Match_Info:-

select out1.match_id,team1_name,team2_name,season_year,toss_winner,toss_name,venue_name,city_name,umpire_name from
(select match_id,t1.team_name as team1_name,t2.team_name as team2_name,season_year,t3.team_name as toss_winner,toss_name,venue.venue_name,venue.city_name from match
join team as t1 on t1.team_id=team1
join team as t2 on t2.team_id=team2
join team as t3 on t3.team_id= toss_winner
join venue on venue.venue_id = match.venue_id) as out1,
(select match_id,umpire.umpire_name from umpire_match
join umpire on umpire.umpire_id= umpire_match.umpire_id) as out2
where out1.match_id=out2.match_id and out1.match_id=501203

Players of Team1

select player.player_name from player_match
join player on player.player_id=player_match.player_id
join match on match.match_id=player_match.match_id and team_id=match.team1 and match.match_id=501203

Players of Team2

select player.player_name from player_match
join player on player.player_id=player_match.player_id
join match on match.match_id=player_match.match_id and team_id=match.team2 and match.match_id=501203


3.
select match_id,over_id*6+ball_id-6 as ball_number,sum(runs_scored+extra_runs) over (
	partition by match_id
	order by over_id*6+ball_id-6
	rows unbounded preceding
) as runs, case when out_type != 'NULL' then 1 else 0 end as out_points, out_type
from ball_by_ball 
where innings_no=1

4.

Innings-1,top3 batsmen

select match_id,player_name,runs,balls from
(select match_id,player_name,sum(runs_scored) as runs,count(runs_scored) as balls
,rank() over (
	partition by match_id
	order by sum(runs_scored) desc,count(runs_scored) asc,player_name asc
)rank_batter
from ball_by_ball
join player on player.player_id=striker
where innings_no=1
group by match_id,player_name)
as out1
where out1.rank_batter<=3 and runs >0

Innings-1,top3 bowler

select match_id,player_name,wickets,runs from
(select match_id,player_name,sum(case when out_type != 'NULL' then 1 else 0 end)as wickets,sum(runs_scored) as runs
,rank() over (
	partition by match_id
	order by sum(case when out_type != 'NULL' then 1 else 0 end) desc,sum(runs_scored) asc,player_name asc
)rank_batter
from ball_by_ball
join player on player.player_id=bowler
where innings_no=1
group by match_id,player_name)
as out1
where out1.rank_batter<=3 and wickets>0

Innings-1.pie chart

select match_id,round(((extras*1.0)/(tot_runs*1.0))*100,2)as extras,
coalesce(round(((sixes*1.0)/(tot_runs*1.0))*100,2), 0 )as sixes,
coalesce(round(((fours*1.0)/(tot_runs*1.0))*100,2), 0 )as fours,
coalesce(round(((threes*1.0)/(tot_runs*1.0))*100,2), 0 )as threes,
coalesce(round(((twos*1.0)/(tot_runs*1.0))*100,2), 0 )as twos,
coalesce(round(((ones*1.0)/(tot_runs*1.0))*100,2), 0 )as ones
from
(select match_id,sum(extra_runs) as extras,
sum(case runs_scored when 6 then 6 else null end) as sixes,
sum(case runs_scored when 4 then 4 else null end) as fours,
sum(case runs_scored when 3 then 3 else null end) as threes,
sum(case runs_scored when 2 then 2 else null end) as twos,
sum(case runs_scored when 1 then 1 else null end) as ones,
sum(extra_runs+runs_scored) as tot_runs
from ball_by_ball
where innings_no=1 
group by match_id
order by match_id ) as out1



Part C:-

a. select player_name, country_name,batting_hand as batting_skill,bowling_skill from player where player_id=1

b. 


Runs per match graph:-

select match_id,striker,runs,wicket_stat,round((1.0*aggregate_runs)/(case when aggregate_wickets!=0 then aggregate_wickets*1.0 else 1.0 end),2) as average from
(select *,
sum(runs) over(
	order by match_id
	rows unbounded preceding
) as aggregate_runs,
sum(wicket_stat) over(
	order by match_id
	rows unbounded preceding
) as aggregate_wickets
from (select match_id,striker,sum(runs_scored) as runs,
sum(case when out_type!='NULL' then 1 else 0 end) as wicket_stat
from ball_by_ball
join player on player.player_id=ball_by_ball.striker
where striker=17
group by match_id,striker
order by match_id) as out1) as out2

playerâ€™s batting career:-

select out3.striker,matches,runs,fours,sixes,fifty,hs,strike_rate,average from
(select striker,count(distinct match_id) as matches,sum(runs_scored) as runs,
coalesce(sum(case runs_scored when 6 then 6 else null end),0) as sixes,
coalesce(sum(case runs_scored when 4 then 4 else null end),0) as fours,
coalesce(round(((sum(runs_scored)*1.0)/(1.0*count(runs_scored)))*100,2),0) as strike_rate,
round((sum(runs_scored)*1.0)/(case when (sum(case when out_type != 'NULL' then 1 else 0 end)*1.0) !=0 then (sum(case when out_type != 'NULL' then 1 else 0 end)*1.0) else 1 end),2) as average
from ball_by_ball
join player on player.player_id=ball_by_ball.striker
group by striker
order by striker) as out3,
(select striker,max(runs_match) as hs,sum(case when runs_match>=50 then 1 else 0 end) as fifty
from (select match_id,striker,sum(runs_scored) as runs_match from ball_by_ball
group by striker,match_id) as out1
group by striker) as out2 
where out2.striker=out3.striker  and out3.striker=2

Player's bowling career:

select out3.bowler,matches,runs,wickets,overs,balls,round((1.0*runs)/(1.0*overs),2) as economy,out2.five_wickets from
(select ball_by_ball.bowler,count(distinct match_id) as Matches,sum(runs_scored) as Runs,
 sum(case when out_type!='NULL' then 1 else 0 end) as wickets,count(runs_scored) as balls
from ball_by_ball 
group by bowler) as out3
join (select bowler,sum(overs_match)as overs,sum(case when wickets_match >=5 then 1 else 0 end) as five_wickets  from
(select match_id,bowler,count(distinct over_id) as overs_match,sum(case when out_type!='NULL' then 1 else 0 end) as wickets_match
from ball_by_ball
group by match_id,bowler
order by bowler) as out1
group by bowler) as out2 on out2.bowler = out3.bowler
where out3.bowler =8

Player's bowling graph:-

select bowler,match_id,sum(runs_scored) as runs_match,sum(case when out_type !='NULL' then 1 else 0 end) as wickets_match from ball_by_ball
where bowler=9
group by bowler,match_id
order by bowler, match_id

E.
2.
a.select venue.venue_id,venue_name,city_name,country_name,capacity,highest_score,least_score,highscore_chased from venue
join (select venue_id,max(inning2_score) as highscore_chased,max(max_score) as highest_score,min(min_score) as least_score from match
join (select out1.match_id,out1.sum as inning1_score,out2.sum as inning2_score,GREATEST(out1.sum,out2.sum)as max_score,Least(out1.sum,out2.sum) as min_score from
(select match_id,sum(runs_scored+extra_runs) 
from ball_by_ball
where innings_no=1
group by match_id
order by match_id) as out1
join (select match_id,sum(runs_scored+extra_runs) 
from ball_by_ball
where innings_no=2
group by match_id
order by match_id) as out2 on out1.match_id=out2.match_id) as out3 
on out3.match_id=match.match_id
group by venue_id) as out4 on out4.venue_id=venue.venue_id
where venue.venue_id = 1

